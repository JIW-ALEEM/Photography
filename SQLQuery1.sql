CREATE DATABASE Photography;

USE Photography;

-- Creating Users table
CREATE TABLE Users (
    UserID INT PRIMARY KEY IDENTITY,
    Username NVARCHAR(50) UNIQUE NOT NULL,
    Password NVARCHAR(255) NOT NULL,
    Email NVARCHAR(100) UNIQUE NOT NULL,
    FullName NVARCHAR(100) NOT NULL,
    Phone NVARCHAR(15) NOT NULL,
    UserRole NVARCHAR(10) NOT NULL DEFAULT 'User',
    CreatedAt DATETIME DEFAULT GETDATE(),
    UpdatedAt DATETIME DEFAULT GETDATE()
);

-- Creating Plans table
CREATE TABLE Plans (
    PlanID INT PRIMARY KEY IDENTITY,
    PlanName NVARCHAR(50) NOT NULL,
    Description1 NVARCHAR(MAX) NOT NULL,
	Description2 NVARCHAR(MAX) NOT NULL,
	Description3 NVARCHAR(MAX) NOT NULL,
	Description4 NVARCHAR(MAX) NOT NULL,
	Description5 NVARCHAR(MAX) NOT NULL,
	Description6 NVARCHAR(MAX) NOT NULL,
    Price DECIMAL(10, 2) NOT NULL
);

-- Creating Bookings table
CREATE TABLE Bookings (
    BookingID INT PRIMARY KEY IDENTITY,
    UserID INT NOT NULL FOREIGN KEY REFERENCES Users(UserID) ON DELETE CASCADE,
    BookingDate DATE NOT NULL,
    BookingTime TIME NOT NULL,
    Status NVARCHAR(20) NOT NULL DEFAULT 'Pending',
    Address NVARCHAR(255) NOT NULL,
    Contact NVARCHAR(50) NOT NULL,
    PlanID INT NOT NULL FOREIGN KEY REFERENCES Plans(PlanID),
    CreatedAt DATETIME DEFAULT GETDATE(),
    UpdatedAt DATETIME DEFAULT GETDATE()
);

-- Creating Blogs table
CREATE TABLE Blogs (
    BlogID INT PRIMARY KEY IDENTITY,
    Title NVARCHAR(100) NOT NULL,
    Content NVARCHAR(MAX) NOT NULL,
    AuthorID INT NOT NULL FOREIGN KEY REFERENCES Users(UserID) ON DELETE CASCADE,
    CreatedAt DATETIME DEFAULT GETDATE(),
    UpdatedAt DATETIME DEFAULT GETDATE()
);

-- Creating Comments table
CREATE TABLE Comments (
    CommentID INT PRIMARY KEY IDENTITY,
    BlogID INT NOT NULL FOREIGN KEY REFERENCES Blogs(BlogID),
    UserID INT NOT NULL FOREIGN KEY REFERENCES Users(UserID),
    CommentText VARCHAR(255) NOT NULL,
    CreatedAt DATETIME DEFAULT GETDATE(),
    UpdatedAt DATETIME DEFAULT GETDATE()
);

-- Creating Likes table
CREATE TABLE Likes (
    LikeID INT PRIMARY KEY IDENTITY,
    BlogID INT NOT NULL FOREIGN KEY REFERENCES Blogs(BlogID),
    UserID INT NOT NULL FOREIGN KEY REFERENCES Users(UserID),
    CreatedAt DATETIME DEFAULT GETDATE()
);

-- Creating Notifications table
CREATE TABLE Notifications (
    NotificationID INT PRIMARY KEY IDENTITY,
    UserID INT NOT NULL FOREIGN KEY REFERENCES Users(UserID) ON DELETE CASCADE,
    Message NVARCHAR(MAX) NOT NULL,
    CreatedAt DATETIME DEFAULT GETDATE(),
    IsRead BIT DEFAULT 0
);

-- Creating Testimonials table
CREATE TABLE Testimonials (
    TestimonialID INT PRIMARY KEY IDENTITY,
    UserID INT NOT NULL FOREIGN KEY REFERENCES Users(UserID) ON DELETE CASCADE,
    Content NVARCHAR(MAX) NOT NULL,
    CreatedAt DATETIME DEFAULT GETDATE()
);

-- Creating PhotoCategories table
CREATE TABLE PhotoCategories (
    CategoryID INT PRIMARY KEY IDENTITY,
    CategoryName NVARCHAR(50) NOT NULL
);

-- Creating Photos table
CREATE TABLE Photos (
    PhotoID INT PRIMARY KEY IDENTITY,
    CategoryID INT NOT NULL FOREIGN KEY REFERENCES PhotoCategories(CategoryID) ,
  
    PhotoURL NVARCHAR(255) NOT NULL,
	Phototitle NVARCHAR(255) NOT NULL,
	Photodesc NVARCHAR(255) NOT NULL,
    UploadedAt DATETIME DEFAULT GETDATE()
);
